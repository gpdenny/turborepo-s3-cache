---
service: ${env:SERVICE_NAME}

provider:
  name: aws
  region: ${env:REGION}
  runtime: nodejs16.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:GetItem
          Resource: !GetAtt TeamsTable.Arn
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
          Resource: !Sub '${CacheBucket.Arn}/*'

functions:
  authorizer:
    handler: src/authorizer.handler
    environment:
      REGION: ${self:provider.region}
      TEAMS_TABLE: ${env:TEAMS_TABLE_NAME}
  s3Signer:
    handler: src/s3Signer.handler
    environment:
      REGION: ${self:provider.region}
      CACHE_BUCKET: ${env:CACHE_BUCKET_NAME}
    events:
      - http:
          path: /v8/artifacts/{hash}
          method: options
          request:
            parameters:
              paths:
                hash: true
              querystrings:
                slug: true
              headers:
                Access-Control-Request-Method: true
          authorizer:
            name: authorizer
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

resources:
  Resources:
    CacheBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${env:CACHE_BUCKET_NAME}
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
        AccessControl: BucketOwnerFullControl
        LifecycleConfiguration:
          Rules:
            - Id: DeleteContentAfterXDay
              Status: "Enabled"
              ExpirationInDays: ${env:CACHE_EXPIRATION_DAYS}
    TeamsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${env:TEAMS_TABLE_NAME}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: name
            KeyType: HASH

useDotenv: true

custom:
  serverless-offline:
    noPrependStageInUrl: true

plugins:
  - serverless-plugin-typescript
  - serverless-offline